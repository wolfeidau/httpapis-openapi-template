AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "wolfeidau: OpenAPI server HTTP API."

Parameters:
  AppName:
    Type: String
    Description: The name of the application.

  Stage:
    Type: String
    Description: The stage of development, e.g., dev, test, prod.
    Default: dev

  Branch:
    Type: String
    Description: The branch used to deploy.
    Default: master

Globals:
  Function:
    Runtime: go1.x
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        STAGE: !Ref Stage
        BRANCH: !Ref Branch

Conditions:
  IsDev:
    !Not [!Equals [!Ref Stage, "dev"]]

Resources:

  HTTPAPIAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/apigateway/AccessLog-API-${AppName}-${Stage}-${Branch}"
      RetentionInDays: !If [IsDev, 14, 365]

  HttpAPI:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefaultRouteSettings:
        ThrottlingBurstLimit: 10
        ThrottlingRateLimit: 10
        DetailedMetricsEnabled: true
      AccessLogSettings:
        DestinationArn: !GetAtt HTTPAPIAccessLogGroup.Arn
        Format: "$context.requestId $context.domainName $context.httpMethod $context.identity.sourceIp $context.path $context.protocol $context.requestId $context.requestTime $context.status $context.responseLength $context.responseLatency $context.integrationLatency"

  APIFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../dist/handler.zip
      Handler: api-lambda
      Events:
        ApiCall:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpAPI

  APIFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${APIFunction}"
      RetentionInDays: !If [IsDev, 14, 365]

Outputs:
  HTTPAPIEndpoint:
    Description: The API Gateway endpoint address of the REST API.
    Value: !Sub 'https://${HttpAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/'
  APIFunctionLogGroup:
    Description: The log group which stores lambda logs.
    Value: !Ref APIFunction
  HTTPAPI:
    Description: The http API.
    Value: !Ref HttpAPI
  HTTPAPIAccessLogGroup:
    Description: The log group which stores api gateway access logs.
    Value: !Ref HTTPAPIAccessLogGroup
